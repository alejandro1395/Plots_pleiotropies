setwd("~/Documents/PhD_EvoGenomics/1st_year/plots/parental_lifespan")
######################################
#########SCRIPT TO DO CHROMOMAP#######
######################################
library(RIdeogram)
library(chromoMap)
#We load both the full dataset and the classified Agonists/Antagonists
paired_dataset <- read.csv("full_dataset_paired.csv", header = FALSE, sep = "\t")
summary(paired_dataset)
View(paired_dataset)
#We have to reformat what we have
IDS <- paste(paired_dataset$V1,paired_dataset$V8,sep="-")
chr <- paste("chr",paired_dataset$V16,sep="")
PosIn <- paired_dataset$V7
PosEnd <- paired_dataset$V14
all_domains <- c(as.character(paired_dataset$V3), as.character(paired_dataset$V10))
elements_2_remove <- c("")
all_domains <- all_domains[!(all_domains %in% elements_2_remove)]
file <- as.data.frame(cbind(IDS, chr, PosIn, PosEnd, all_domains))
write.csv(file, file = "annotation_domains.csv", sep = "\t")
#human karyotype
table <- read.csv("hum_chr_coord.tsv", header = FALSE, sep = "\t")
chromoMap("hum_chr_coord.tsv","annotation_domains.csv",
data_based_color_map = T,
data_type = "categorical",
segment_annotation = TRUE,
data_colors = list(c("red","green","yellow","blue","grey","orange","pink","purple","brown","darkgreen")),
legend = T, top_margin = 30,
ch_gap = 10,
left_margin = 40,
lg_y = 180, lg_x = 100,
setwd("~/Documents/PhD_EvoGenomics/1st_year/plots/parental_lifespan")
######################################
#########SCRIPT TO DO CHROMOMAP#######
######################################
library(RIdeogram)
library(chromoMap)
#We load both the full dataset and the classified Agonists/Antagonists
paired_dataset <- read.csv("full_dataset_paired.csv", header = FALSE, sep = "\t")
summary(paired_dataset)
View(paired_dataset)
#We have to reformat what we have
IDS <- paste(paired_dataset$V1,paired_dataset$V8,sep="-")
chr <- paste("chr",paired_dataset$V16,sep="")
PosIn <- paired_dataset$V7
PosEnd <- paired_dataset$V14
all_domains <- c(as.character(paired_dataset$V3), as.character(paired_dataset$V10))
elements_2_remove <- c("")
all_domains <- all_domains[!(all_domains %in% elements_2_remove)]
file <- as.data.frame(cbind(IDS, chr, PosIn, PosEnd, all_domains))
write.csv(file, file = "annotation_domains.csv", sep = "\t")
#human karyotype
table <- read.csv("hum_chr_coord.tsv", header = FALSE, sep = "\t")
chromoMap("hum_chr_coord.tsv","annotation_domains.csv",
data_based_color_map = T,
data_type = "categorical",
segment_annotation = TRUE,
data_colors = list(c("red","green","yellow","blue","grey","orange","pink","purple","brown","darkgreen")),
legend = T, top_margin = 30,
ch_gap = 10,
left_margin = 40,
lg_y = 180, lg_x = 100,
######################################
#########SCRIPT TO DO CHROMOMAP#######
######################################
library(RIdeogram)
library(chromoMap)
#We load both the full dataset and the classified Agonists/Antagonists
paired_dataset <- read.csv("full_dataset_paired.csv", header = FALSE, sep = "\t")
summary(paired_dataset)
View(paired_dataset)
#We have to reformat what we have
chromoMap("hum_chr_coord.tsv","annotation_domains.csv",
data_based_color_map = T,
data_type = "categorical",
segment_annotation = TRUE,
data_colors = list(c("red","green","yellow","blue","grey","orange","pink","purple","brown","darkgreen")),
legend = T, top_margin = 30,
ch_gap = 10,
left_margin = 40,
lg_y = 180, lg_x = 100,
chr_color = "black")
######################################
#########SCRIPT TO DO CHROMOMAP#######
######################################
library(RIdeogram)
library(chromoMap)
#We load both the full dataset and the classified Agonists/Antagonists
paired_dataset <- read.csv("full_dataset_paired.csv", header = FALSE, sep = "\t")
summary(paired_dataset)
View(paired_dataset)
#We have to reformat what we have
chromoMap("hum_chr_coord.tsv","annotation_domains.csv",
data_based_color_map = T,
data_type = "categorical",
segment_annotation = TRUE,
data_colors = list(c("red","green","yellow","blue","grey","orange","pink","purple","brown","darkgreen")),
legend = T, top_margin = 30,
ch_gap = 10,
left_margin = 40,
lg_y = 180, lg_x = 100,
chr_color = "black")
######################################
#########SCRIPT TO DO CHROMOMAP#######
######################################
library(RIdeogram)
library(chromoMap)
#We load both the full dataset and the classified Agonists/Antagonists
paired_dataset <- read.csv("full_dataset_paired.csv", header = FALSE, sep = "\t")
summary(paired_dataset)
View(paired_dataset)
#We have to reformat what we have
chromoMap("hum_chr_coord.tsv","annotation_domains.csv",
data_based_color_map = T,
data_type = "categorical",
segment_annotation = TRUE,
data_colors = list(c("red","green","yellow","blue","grey","orange","pink","purple","brown","darkgreen")),
legend = T, top_margin = 30,
ch_gap = 10,
left_margin = 40,
lg_y = 180, lg_x = 100,
chr_color = "black")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("karyoploteR")
library(karyoploteR)
kp <- plotKaryotype(genome="hg19")
kp <- plotKaryotype()
kp <- plotKaryotype(chromosomes=c("autosomal"))
annotation_domains <- read.csv("annotation_domains.csv", header = FALSE, sep = "\t")
annotation_domains
kp <- plotKaryotype(chromosomes=c("autosomal"))
pleios <- toGRanges(data.frame(chr=annotation_domains$V2, start=annotation_domains$V3,
end=annotation_domains$V4))
kpPlotRegions(kp, pleios, col="#FFAACC")
require(RIdeogram)
install.packages("RIdeogram")
require(RIdeogram)
install.packages("RIdeogram")
require(RIdeogram)
install.packages("RIdeogram")
require(RIdeogram)
ideogram(karyotype = human_karyotype)
data(human_karyotype, package="RIdeogram")
ideogram(karyotype = human_karyotype)
data(human_karyotype, package="RIdeogram")
human_karyotype,
human_karyotype
ideogram(karyotype = human_karyotype)
convertSVG("chromosome.svg", device = "png")
pleios_domain <- read.table("annotation_domains.csv", sep = "\t", header = T, stringsAsFactors = F)
pleios_domain <- read.table("annotation_domains.csv", sep = "\t", header = F, stringsAsFactors = F)
pleios_domain
pleios_domain <- pleios_domain[,c("V5","V5","V2","V3","V4")]
pleios_domain
names(pleios_domain) <- c("Type", "Shape", "Chr", "Start", "End")
pleios_domain
data(human_karyotype, package="RIdeogram")
ideogram(karyotype = human_karyotype, label = pleios_domain, label_type = "marker")
pleios_domain
pleios_domain
human_karyotype
gsub("C([0-9]+)_.*", "\\1", pleios_domain$Chr)
pleios_domain$Chr
gsub("C([0-9]+)_.*", "\\1", pleios_domain$Chr)
gsub("C([a-z+)_.*", "\\1", pleios_domain$Chr)
gsub("[a-z]+", "\\1", pleios_domain$Chr)
pleios_domain
pleios_domain$Chr <- gsub("[a-z]+", "\\1", pleios_domain$Chr)
pleios_domain
ideogram(karyotype = human_karyotype, label = pleios_domain, label_type = "marker")
convertSVG("chromosome.svg", device = "png")
ideogram(karyotype = human_karyotype, label = pleios_domain, label_type = "marker")
pleios_domain <- read.table("annotation_domains.csv", sep = "\t", header = F, stringsAsFactors = F)
pleios_domain <- pleios_domain[,c("V5","V5","V2","V3","V4")]
names(pleios_domain) <- c("Type", "Shape", "Chr", "Start", "End")
pleios_domain$Chr <- gsub("[a-z]+", "\\1", pleios_domain$Chr)
data(human_karyotype, package="RIdeogram")
ideogram(karyotype = human_karyotype, label = pleios_domain, label_type = "marker")
View(pleios_domain)
Cstack_info()
ideogram(karyotype = human_karyotype, label = pleios_domain, label_type = "marker")
ulimit -s
Cstack_info()
Cstack_info()
pleios_domain$Shape <- ifelse(pleios_domain$Type == "cardio", "square", "circle")
pleios_domain
ideogram(karyotype = human_karyotype, label = pleios_domain, label_type = "marker")
pleios_domain$color <- ifelse(pleios_domain$Type == "cardio", "6a3d9a", "ff7f00")
pleios_domain
ideogram(karyotype = human_karyotype, label = pleios_domain, label_type = "marker")
